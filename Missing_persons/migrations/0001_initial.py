# Generated by Django 5.1.3 on 2024-11-08 06:54

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Chowki',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('telephone_no', models.CharField(max_length=15)),
                ('address', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='HospitalDivision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(db_index=True, max_length=255)),
                ('apartment_number', models.CharField(blank=True, max_length=100, null=True)),
                ('village', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(db_index=True, max_length=255)),
                ('state', models.CharField(db_index=True, max_length=255)),
                ('postal_code', models.CharField(db_index=True, max_length=20)),
                ('country', models.CharField(db_index=True, max_length=255)),
                ('type', models.CharField(choices=[('Missing Person', 'Missing Person'), ('Undefined Missing Person', 'Undefined Missing Person'), ('Undefined Body', 'Undefined Body'), ('Volunteer', 'Volunteer')], db_index=True, max_length=50)),
                ('subtype', models.CharField(choices=[('Permanent Address', 'Permanent Address'), ('Current Address', 'Current Address'), ('Emergency', 'Emergency')], db_index=True, max_length=50)),
                ('landmark', models.CharField(blank=True, max_length=255, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('address_type', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateField(auto_now=True)),
                ('country_code', models.CharField(db_index=True, max_length=10)),
            ],
            options={
                'indexes': [models.Index(fields=['city', 'state'], name='Missing_per_city_e78595_idx'), models.Index(fields=['postal_code', 'country'], name='Missing_per_postal__348875_idx'), models.Index(fields=['type', 'subtype'], name='Missing_per_type_6755d4_idx'), models.Index(fields=['street', 'city'], name='Missing_per_street_8d63b7_idx'), models.Index(fields=['is_active', 'country_code'], name='Missing_per_is_acti_8308b2_idx')],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(db_index=True, max_length=15)),
                ('email', models.CharField(db_index=True, max_length=255)),
                ('type', models.CharField(choices=[('Missing Person', 'Missing Person'), ('Undefined Missing Person', 'Undefined Missing Person'), ('Undefined Body', 'Undefined Body'), ('Volunteer', 'Volunteer')], db_index=True, max_length=50)),
                ('subtype', models.CharField(choices=[('Personal', 'Personal'), ('Business', 'Business'), ('Emergency', 'Emergency')], db_index=True, max_length=50)),
                ('subtype_detail', models.CharField(blank=True, max_length=255, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('job_title', models.CharField(blank=True, max_length=255, null=True)),
                ('website', models.CharField(blank=True, max_length=255, null=True)),
                ('social_media_handles', models.CharField(blank=True, max_length=255, null=True)),
                ('is_primary', models.BooleanField(db_index=True, default=False)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('last_updated', models.DateField(auto_now=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'indexes': [models.Index(fields=['type', 'subtype'], name='Missing_per_type_cd4bd0_idx'), models.Index(fields=['email', 'is_primary'], name='Missing_per_email_b0f2aa_idx'), models.Index(fields=['phone_number'], name='Missing_per_phone_n_b4beee_idx'), models.Index(fields=['location'], name='Missing_per_locatio_0f5d0d_idx'), models.Index(fields=['company_name'], name='Missing_per_company_7bcf01_idx'), models.Index(fields=['job_title'], name='Missing_per_job_tit_705aa2_idx')],
            },
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('entity_type', models.CharField(choices=[('Government', 'Government'), ('Private', 'Private')], max_length=50)),
                ('address', models.TextField(max_length=255)),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hospitals', to='Missing_persons.hospitaldivision')),
            ],
        ),
        migrations.CreateModel(
            name='HospitalZone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'indexes': [models.Index(fields=['name'], name='Missing_per_name_bbf0bf_idx')],
            },
        ),
        migrations.AddField(
            model_name='hospitaldivision',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='divisions', to='Missing_persons.hospitalzone'),
        ),
        migrations.CreateModel(
            name='MissingPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(db_index=True, max_length=255)),
                ('age', models.PositiveIntegerField(db_index=True)),
                ('date_of_birth', models.DateField(db_index=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Transgender', 'Transgender')], db_index=True, max_length=20)),
                ('time_of_birth', models.TimeField(blank=True, db_index=True, null=True)),
                ('place_of_birth', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('height', models.FloatField(db_index=True, help_text='Height in cm')),
                ('weight', models.FloatField(db_index=True, help_text='Weight in kg')),
                ('complexion', models.CharField(choices=[('Fair', 'Fair'), ('Dusky', 'Dusky'), ('Wheatish', 'Wheatish'), ('Dark', 'Dark')], db_index=True, max_length=20)),
                ('hair_color', models.CharField(choices=[('Black', 'Black'), ('Brown', 'Brown'), ('Grey', 'Grey')], db_index=True, max_length=20)),
                ('hair_type', models.CharField(choices=[('Straight', 'Straight'), ('Wavy', 'Wavy'), ('Curly', 'Curly'), ('Bald', 'Bald')], db_index=True, max_length=20)),
                ('eye_color', models.CharField(choices=[('Dark Brown', 'Dark Brown'), ('Light Brown', 'Light Brown'), ('Hazel', 'Hazel'), ('Amber', 'Amber'), ('Green', 'Green'), ('Gray', 'Gray')], db_index=True, max_length=20)),
                ('birth_mark', models.TextField(blank=True, db_index=True, null=True)),
                ('distinctive_mark', models.TextField(blank=True, db_index=True, null=True)),
                ('blood_group', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], db_index=True, max_length=3)),
                ('photo_upload', models.ImageField(blank=True, db_index=True, null=True, upload_to='ALLphotos/Missingperson/')),
                ('condition', models.CharField(blank=True, choices=[('Memory loss', 'Memory loss'), ('Shock', 'Shock')], db_index=True, max_length=20, null=True)),
                ('caste', models.CharField(choices=[('Open', 'Open'), ('SC', 'SC'), ('ST', 'ST'), ('OBC', 'OBC')], db_index=True, max_length=50)),
                ('sub_caste', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('marital_status', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married'), ('Widowed', 'Widowed')], db_index=True, max_length=20)),
                ('religion', models.CharField(choices=[('Hindu', 'Hindu'), ('Muslim', 'Muslim'), ('Sikh', 'Sikh'), ('Christian', 'Christian')], db_index=True, max_length=50)),
                ('mother_tongue', models.CharField(choices=[('Hindi', 'Hindi'), ('English', 'English'), ('Marathi', 'Marathi')], db_index=True, max_length=50)),
                ('other_known_languages', models.CharField(blank=True, db_index=True, help_text='Comma-separated list of languages', max_length=255, null=True)),
                ('educational_details', models.TextField(blank=True, db_index=True, null=True)),
                ('occupation', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('identification_details', models.CharField(choices=[('Aadhar Card', 'Aadhar Card'), ('Pan Card', 'Pan Card'), ('Driving License', 'Driving License'), ('Passport', 'Passport')], db_index=True, max_length=50)),
                ('identification_card_no', models.BigIntegerField(db_index=True)),
                ('missing_time', models.TimeField(db_index=True)),
                ('missing_date', models.DateField(db_index=True)),
                ('latitude', models.DecimalField(db_index=True, decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(db_index=True, decimal_places=6, max_digits=9)),
                ('location_details', models.TextField(blank=True, db_index=True, null=True)),
                ('last_seen_location', models.TextField(blank=True, db_index=True, null=True)),
                ('fir_number', models.PositiveIntegerField(db_index=True)),
                ('fir_photo', models.BinaryField(blank=True, db_index=True, null=True)),
                ('investigating_officer_name', models.CharField(db_index=True, max_length=255)),
                ('investigating_officer_contact_number', models.CharField(db_index=True, max_length=15)),
                ('reportingperson_name', models.CharField(db_index=True, max_length=255)),
                ('relationship_with_victim', models.CharField(choices=[('Father', 'Father'), ('Mother', 'Mother'), ('Brother', 'Brother'), ('Sister', 'Sister'), ('Friend', 'Friend')], db_index=True, max_length=50)),
                ('contact_numbers', models.CharField(db_index=True, max_length=20)),
                ('email_address', models.EmailField(db_index=True, max_length=255)),
                ('willing_to_volunteer', models.BooleanField(db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='missing_person', to='Missing_persons.address')),
                ('contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='missing_person', to='Missing_persons.contact')),
                ('police_station_name_and_address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='missing_person', to='Missing_persons.chowki')),
            ],
        ),
        migrations.CreateModel(
            name='PoliceStation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('address', models.TextField()),
                ('telephone_no', models.CharField(max_length=15)),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='police_stations', to='Missing_persons.division')),
            ],
        ),
        migrations.AddField(
            model_name='chowki',
            name='police_station',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chowkis', to='Missing_persons.policestation'),
        ),
        migrations.CreateModel(
            name='UnidentifiedBody',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('estimated_age', models.IntegerField(blank=True, db_index=True, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Transgender', 'Transgender')], db_index=True, max_length=20)),
                ('date_found', models.DateField(db_index=True)),
                ('estimated_time_of_death', models.TimeField(blank=True, db_index=True, null=True)),
                ('height', models.FloatField(db_index=True, help_text='Height in cm')),
                ('weight', models.FloatField(db_index=True, help_text='Weight in kg')),
                ('complexion', models.CharField(choices=[('Fair', 'Fair'), ('Dusky', 'Dusky'), ('Wheatish', 'Wheatish'), ('Dark', 'Dark')], db_index=True, max_length=50)),
                ('hair_color', models.CharField(choices=[('Black', 'Black'), ('Brown', 'Brown'), ('Grey', 'Grey')], db_index=True, max_length=50)),
                ('hair_type', models.CharField(choices=[('Straight', 'Straight'), ('Wavy', 'Wavy'), ('Curly', 'Curly'), ('Bald', 'Bald')], db_index=True, max_length=50)),
                ('eye_color', models.CharField(choices=[('Dark Brown', 'Dark Brown'), ('Light Brown', 'Light Brown'), ('Hazel', 'Hazel'), ('Amber', 'Amber'), ('Green', 'Green'), ('Gray', 'Gray')], db_index=True, max_length=50)),
                ('birth_mark', models.TextField(blank=True, db_index=True, max_length=100, null=True)),
                ('other_distinctive_mark', models.TextField(blank=True, db_index=True, max_length=100, null=True)),
                ('blood_group', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], db_index=True, max_length=20)),
                ('body_photo_upload', models.FileField(blank=True, db_index=True, null=True, upload_to='ALLphotos/Unidentified_Bodies/body_photos/')),
                ('clothing_description', models.TextField(blank=True, db_index=True, max_length=100, null=True)),
                ('last_seen_details', models.TextField(blank=True, db_index=True, max_length=100, null=True)),
                ('fir_number', models.IntegerField(db_index=True, help_text='FIR Number assigned for the case')),
                ('fir_photo', models.FileField(blank=True, db_index=True, null=True, upload_to='ALLphotos/Unidentified_Bodies/fir_photos/')),
                ('investigating_officer_name', models.CharField(db_index=True, help_text='Name of the investigating police officer', max_length=50)),
                ('investigating_officer_contact_number', models.CharField(db_index=True, help_text='Contact number of the investigating officer', max_length=15)),
                ('fingerprints_collected', models.FileField(blank=True, db_index=True, help_text='Upload fingerprints collected', null=True, upload_to='ALLphotos/Unidentified_Bodies/fingerprints/')),
                ('dna_sample_collected', models.FileField(blank=True, db_index=True, help_text='Upload DNA samples collected', null=True, upload_to='ALLphotos/Unidentified_Bodies/dna_samples/')),
                ('post_mortem_report_upload', models.FileField(blank=True, db_index=True, help_text='Upload the post-mortem report', null=True, upload_to='ALLphotos/Unidentified_Bodies/post_mortem_reports/')),
                ('created_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('last_updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='unidentified_bodies', to='Missing_persons.address')),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='unidentified_bodies', to='Missing_persons.contact')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unidentified_bodies', to='Missing_persons.hospital')),
                ('police_station_name_and_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unidentified_bodies', to='Missing_persons.chowki')),
            ],
        ),
        migrations.CreateModel(
            name='UnidentifiedMissingPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Full Name')),
                ('estimated_age', models.PositiveIntegerField(blank=True, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Transgender', 'Transgender')], max_length=50, null=True, verbose_name='Gender')),
                ('height', models.FloatField(blank=True, null=True, verbose_name='Height (cm)')),
                ('weight', models.FloatField(blank=True, null=True, verbose_name='Weight (kg)')),
                ('birth_mark', models.TextField(blank=True, max_length=255, null=True)),
                ('complexion', models.CharField(blank=True, choices=[('Fair', 'Fair'), ('Dusky', 'Dusky'), ('Wheatish', 'Wheatish'), ('Dark', 'Dark')], max_length=50, null=True, verbose_name='Complexion')),
                ('hair_color', models.CharField(blank=True, choices=[('Black', 'Black'), ('Brown', 'Brown'), ('Grey', 'Grey')], max_length=50, null=True, verbose_name='Hair Color')),
                ('hair_type', models.CharField(blank=True, choices=[('Straight', 'Straight'), ('Wavy', 'Wavy'), ('Curly', 'Curly'), ('Bald', 'Bald')], max_length=50, null=True, verbose_name='Hair Type')),
                ('eye_color', models.CharField(blank=True, choices=[('Dark brown', 'Dark brown'), ('Light Brown', 'Light Brown'), ('Hazel', 'Hazel'), ('Amber', 'Amber'), ('Green', 'Green'), ('Gray', 'Gray')], max_length=50, null=True, verbose_name='Eye Color')),
                ('other_distinctive_mark', models.TextField(blank=True, null=True)),
                ('photo_upload', models.ImageField(blank=True, null=True, upload_to='ALLphotos/Unidnetified_missing_person/photos/', verbose_name='Photo Upload')),
                ('caste', models.CharField(blank=True, choices=[('Open', 'Open'), ('SC', 'SC'), ('ST', 'ST')], max_length=50, null=True, verbose_name='Caste')),
                ('marital_status', models.CharField(blank=True, choices=[('Single', 'Single'), ('Married', 'Married'), ('Widowed', 'Widowed')], max_length=50, null=True, verbose_name='Marital Status')),
                ('religion', models.CharField(blank=True, choices=[('Hindu', 'Hindu'), ('Muslim', 'Muslim'), ('Sikh', 'Sikh')], max_length=50, null=True, verbose_name='Religion')),
                ('other_known_languages', models.CharField(blank=True, choices=[('Hindi', 'Hindi'), ('Marathi', 'Marathi'), ('Bengali', 'Bengali')], max_length=255, null=True, verbose_name='Other Known Languages')),
                ('identification_details', models.TextField(blank=True, null=True, verbose_name='Identification Details')),
                ('last_location', models.TextField(blank=True, null=True, verbose_name='Last Location of Missing Person')),
                ('last_seen_details', models.TextField(blank=True, null=True, verbose_name='Last Seen Details/Sighting Details')),
                ('condition_at_discovery', models.CharField(blank=True, choices=[('Memory loss', 'Memory loss'), ('Shock', 'Shock'), ('Injured', 'Injured'), ('Other', 'Other')], max_length=50, null=True, verbose_name='Condition at Discovery')),
                ('reporting_person_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name of Reporting Person')),
                ('reporting_person_contact_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='Contact Number(s)')),
                ('reporting_person_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email Address')),
                ('relationship_with_victim', models.CharField(blank=True, max_length=255, null=True, verbose_name='Relationship with Victim')),
                ('availability_for_search_operations', models.CharField(blank=True, max_length=50, null=True, verbose_name='Availability for Search Operations')),
                ('preferred_mode_of_communication', models.CharField(blank=True, max_length=50, null=True, verbose_name='Preferred Mode of Communication')),
                ('access_to_vehicle', models.BooleanField(default=False, verbose_name='Access to Vehicle for Search Operations')),
                ('special_skills', models.TextField(blank=True, null=True, verbose_name='Special Skills')),
                ('previous_search_experience', models.TextField(blank=True, null=True, verbose_name='Details of Previous Search Experience')),
                ('upload_evidence', models.FileField(blank=True, null=True, upload_to='ALLphotos/Unidnetified_missing_person/evidence/', verbose_name='Upload Evidence (e.g., photos, notes)')),
                ('last_seen_date', models.DateField(blank=True, null=True)),
                ('reported_date', models.DateField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Undefined_missing_person', to='Missing_persons.address')),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Undefined_missing_person', to='Missing_persons.contact')),
            ],
        ),
        migrations.CreateModel(
            name='ResolvedCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirmed_by', models.CharField(max_length=255)),
                ('is_deleted', models.BooleanField(default=False)),
                ('missing_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Missing_persons.missingperson')),
                ('unidentified_body', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Missing_persons.unidentifiedbody')),
                ('unidentified_missing_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Missing_persons.unidentifiedmissingperson')),
            ],
        ),
        migrations.CreateModel(
            name='Volunteer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(db_index=True, max_length=255)),
                ('dob', models.DateField(db_index=True, help_text='Date of Birth')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Transgender', 'Transgender')], db_index=True, max_length=20)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('volunteer_group', models.CharField(choices=[('Group A', 'Group A'), ('Group B', 'Group B'), ('Group C', 'Group C')], db_index=True, max_length=50)),
                ('assigned_region', models.CharField(db_index=True, help_text='Region assigned to the volunteer', max_length=100)),
                ('search_start_date', models.DateField(db_index=True)),
                ('search_end_date', models.DateField(blank=True, db_index=True, null=True)),
                ('search_timing', models.TimeField(db_index=True, help_text="Timing for the volunteer's search")),
                ('gps_tracker_enabled', models.BooleanField(db_index=True, default=False, help_text='Does the volunteer have GPS tracking?')),
                ('mode_of_search', models.CharField(choices=[('On Foot', 'On Foot'), ('Vehicle', 'Vehicle'), ('Drone', 'Drone')], db_index=True, max_length=50)),
                ('other_equipment_issued', models.TextField(blank=True, db_index=True, max_length=100, null=True)),
                ('blood_group', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], db_index=True, max_length=20)),
                ('known_allergies', models.TextField(blank=True, db_index=True, max_length=100, null=True)),
                ('pre_existing_medical_conditions', models.TextField(blank=True, db_index=True, max_length=200, null=True)),
                ('emergency_contact_name', models.CharField(db_index=True, max_length=50)),
                ('emergency_contact_number', models.CharField(db_index=True, max_length=15)),
                ('relationship_with_volunteer', models.CharField(db_index=True, help_text='Relationship with the volunteer (e.g., Father, Mother, Spouse)', max_length=50)),
                ('feedback_after_search', models.TextField(blank=True, db_index=True, max_length=200, null=True)),
                ('issues_faced_during_search', models.TextField(blank=True, db_index=True, max_length=200, null=True)),
                ('additional_suggestions', models.TextField(blank=True, db_index=True, max_length=200, null=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volunteers', to='Missing_persons.address')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volunteers', to='Missing_persons.contact')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_percentage', models.FloatField()),
                ('match_type', models.CharField(default='Partial', max_length=50)),
                ('matching_criteria', models.JSONField(blank=True, null=True)),
                ('resolution_status', models.CharField(choices=[('Pending', 'Pending'), ('Resolved - Found Alive', 'Resolved - Found Alive'), ('Resolved - Deceased', 'Resolved - Deceased')], max_length=50, null=True)),
                ('date_matched', models.DateTimeField(auto_now_add=True, null=True)),
                ('missing_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Missing_persons.missingperson')),
                ('unidentified_body', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Missing_persons.unidentifiedbody')),
                ('undefined_missing_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Missing_persons.unidentifiedmissingperson')),
                ('volunteer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Missing_persons.volunteer')),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'indexes': [models.Index(fields=['name'], name='Missing_per_name_59d6e9_idx')],
            },
        ),
        migrations.AddField(
            model_name='division',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='divisions', to='Missing_persons.zone'),
        ),
        migrations.AddIndex(
            model_name='hospital',
            index=models.Index(fields=['division', 'name'], name='Missing_per_divisio_cbf8d7_idx'),
        ),
        migrations.AddIndex(
            model_name='hospital',
            index=models.Index(fields=['entity_type'], name='Missing_per_entity__7625f3_idx'),
        ),
        migrations.AddIndex(
            model_name='hospitaldivision',
            index=models.Index(fields=['zone', 'name'], name='Missing_per_zone_id_8be259_idx'),
        ),
        migrations.AddIndex(
            model_name='missingperson',
            index=models.Index(fields=['full_name', 'age', 'date_of_birth', 'gender', 'time_of_birth', 'place_of_birth'], name='Missing_per_full_na_c2697c_idx'),
        ),
        migrations.AddIndex(
            model_name='missingperson',
            index=models.Index(fields=['height', 'weight', 'complexion', 'hair_color', 'hair_type', 'eye_color'], name='Missing_per_height_e8879f_idx'),
        ),
        migrations.AddIndex(
            model_name='missingperson',
            index=models.Index(fields=['birth_mark', 'distinctive_mark', 'blood_group'], name='Missing_per_birth_m_c2973f_idx'),
        ),
        migrations.AddIndex(
            model_name='missingperson',
            index=models.Index(fields=['address', 'contact', 'condition'], name='Missing_per_address_a94126_idx'),
        ),
        migrations.AddIndex(
            model_name='missingperson',
            index=models.Index(fields=['caste', 'sub_caste', 'marital_status', 'religion', 'mother_tongue'], name='Missing_per_caste_5571cc_idx'),
        ),
        migrations.AddIndex(
            model_name='missingperson',
            index=models.Index(fields=['other_known_languages', 'educational_details', 'occupation', 'identification_details'], name='Missing_per_other_k_db66dc_idx'),
        ),
        migrations.AddIndex(
            model_name='missingperson',
            index=models.Index(fields=['identification_card_no'], name='Missing_per_identif_53f1f9_idx'),
        ),
        migrations.AddIndex(
            model_name='missingperson',
            index=models.Index(fields=['missing_time', 'missing_date', 'latitude', 'longitude'], name='Missing_per_missing_c4a9fd_idx'),
        ),
        migrations.AddIndex(
            model_name='missingperson',
            index=models.Index(fields=['location_details', 'last_seen_location'], name='Missing_per_locatio_57cba5_idx'),
        ),
        migrations.AddIndex(
            model_name='missingperson',
            index=models.Index(fields=['fir_number', 'fir_photo'], name='Missing_per_fir_num_7aee28_idx'),
        ),
        migrations.AddIndex(
            model_name='missingperson',
            index=models.Index(fields=['police_station_name_and_address', 'investigating_officer_name', 'investigating_officer_contact_number'], name='Missing_per_police__ea404d_idx'),
        ),
        migrations.AddIndex(
            model_name='missingperson',
            index=models.Index(fields=['reportingperson_name', 'relationship_with_victim', 'contact_numbers', 'email_address'], name='Missing_per_reporti_c56c16_idx'),
        ),
        migrations.AddIndex(
            model_name='missingperson',
            index=models.Index(fields=['willing_to_volunteer', 'is_deleted'], name='Missing_per_willing_1c97d5_idx'),
        ),
        migrations.AddIndex(
            model_name='policestation',
            index=models.Index(fields=['division', 'name'], name='Missing_per_divisio_9951c9_idx'),
        ),
        migrations.AddIndex(
            model_name='policestation',
            index=models.Index(fields=['telephone_no'], name='Missing_per_telepho_990674_idx'),
        ),
        migrations.AddIndex(
            model_name='chowki',
            index=models.Index(fields=['police_station', 'name'], name='Missing_per_police__665bb6_idx'),
        ),
        migrations.AddIndex(
            model_name='chowki',
            index=models.Index(fields=['telephone_no'], name='Missing_per_telepho_5b92c9_idx'),
        ),
        migrations.AddIndex(
            model_name='unidentifiedbody',
            index=models.Index(fields=['full_name', 'estimated_age', 'gender', 'date_found', 'estimated_time_of_death'], name='Missing_per_full_na_c877de_idx'),
        ),
        migrations.AddIndex(
            model_name='unidentifiedbody',
            index=models.Index(fields=['height', 'weight', 'complexion', 'hair_color', 'hair_type', 'eye_color'], name='Missing_per_height_8bb502_idx'),
        ),
        migrations.AddIndex(
            model_name='unidentifiedbody',
            index=models.Index(fields=['birth_mark', 'other_distinctive_mark', 'blood_group'], name='Missing_per_birth_m_eb1a9b_idx'),
        ),
        migrations.AddIndex(
            model_name='unidentifiedbody',
            index=models.Index(fields=['body_photo_upload', 'clothing_description', 'last_seen_details'], name='Missing_per_body_ph_4a899e_idx'),
        ),
        migrations.AddIndex(
            model_name='unidentifiedbody',
            index=models.Index(fields=['address', 'contact'], name='Missing_per_address_c03a33_idx'),
        ),
        migrations.AddIndex(
            model_name='unidentifiedbody',
            index=models.Index(fields=['fir_number', 'fir_photo'], name='Missing_per_fir_num_5b8908_idx'),
        ),
        migrations.AddIndex(
            model_name='unidentifiedbody',
            index=models.Index(fields=['police_station_name_and_address', 'investigating_officer_name', 'investigating_officer_contact_number'], name='Missing_per_police__4c5ace_idx'),
        ),
        migrations.AddIndex(
            model_name='unidentifiedbody',
            index=models.Index(fields=['hospital', 'fingerprints_collected', 'dna_sample_collected', 'post_mortem_report_upload'], name='Missing_per_hospita_5b9d5b_idx'),
        ),
        migrations.AddIndex(
            model_name='unidentifiedbody',
            index=models.Index(fields=['created_date', 'last_updated', 'is_deleted'], name='Missing_per_created_74545d_idx'),
        ),
        migrations.AddIndex(
            model_name='unidentifiedmissingperson',
            index=models.Index(fields=['full_name', 'estimated_age', 'date_of_birth', 'gender', 'is_active'], name='Missing_per_full_na_48dd1a_idx'),
        ),
        migrations.AddIndex(
            model_name='unidentifiedmissingperson',
            index=models.Index(fields=['height', 'weight', 'complexion', 'hair_color', 'hair_type', 'eye_color'], name='Missing_per_height_e016a6_idx'),
        ),
        migrations.AddIndex(
            model_name='unidentifiedmissingperson',
            index=models.Index(fields=['birth_mark', 'other_distinctive_mark', 'condition_at_discovery'], name='Missing_per_birth_m_0c027f_idx'),
        ),
        migrations.AddIndex(
            model_name='unidentifiedmissingperson',
            index=models.Index(fields=['identification_details', 'photo_upload', 'upload_evidence'], name='Missing_per_identif_18caac_idx'),
        ),
        migrations.AddIndex(
            model_name='unidentifiedmissingperson',
            index=models.Index(fields=['last_location', 'last_seen_details', 'last_seen_date'], name='Missing_per_last_lo_1c50df_idx'),
        ),
        migrations.AddIndex(
            model_name='unidentifiedmissingperson',
            index=models.Index(fields=['reporting_person_name', 'reporting_person_contact_number', 'relationship_with_victim'], name='Missing_per_reporti_8e81ef_idx'),
        ),
        migrations.AddIndex(
            model_name='unidentifiedmissingperson',
            index=models.Index(fields=['availability_for_search_operations', 'preferred_mode_of_communication', 'access_to_vehicle'], name='Missing_per_availab_4c88c0_idx'),
        ),
        migrations.AddIndex(
            model_name='unidentifiedmissingperson',
            index=models.Index(fields=['special_skills', 'previous_search_experience'], name='Missing_per_special_e70a02_idx'),
        ),
        migrations.AddIndex(
            model_name='unidentifiedmissingperson',
            index=models.Index(fields=['is_deleted', 'is_active'], name='Missing_per_is_dele_8676e0_idx'),
        ),
        migrations.AddIndex(
            model_name='unidentifiedmissingperson',
            index=models.Index(fields=['address', 'contact'], name='Missing_per_address_3c4a47_idx'),
        ),
        migrations.AddIndex(
            model_name='volunteer',
            index=models.Index(fields=['full_name', 'dob', 'gender', 'is_active'], name='Missing_per_full_na_934fc2_idx'),
        ),
        migrations.AddIndex(
            model_name='volunteer',
            index=models.Index(fields=['address', 'contact'], name='Missing_per_address_715daf_idx'),
        ),
        migrations.AddIndex(
            model_name='volunteer',
            index=models.Index(fields=['volunteer_group', 'assigned_region', 'search_start_date', 'search_end_date', 'search_timing'], name='Missing_per_volunte_6153de_idx'),
        ),
        migrations.AddIndex(
            model_name='volunteer',
            index=models.Index(fields=['gps_tracker_enabled', 'mode_of_search', 'other_equipment_issued'], name='Missing_per_gps_tra_8ef345_idx'),
        ),
        migrations.AddIndex(
            model_name='volunteer',
            index=models.Index(fields=['blood_group', 'known_allergies', 'pre_existing_medical_conditions'], name='Missing_per_blood_g_4864e3_idx'),
        ),
        migrations.AddIndex(
            model_name='volunteer',
            index=models.Index(fields=['emergency_contact_name', 'emergency_contact_number', 'relationship_with_volunteer'], name='Missing_per_emergen_1a24ab_idx'),
        ),
        migrations.AddIndex(
            model_name='volunteer',
            index=models.Index(fields=['feedback_after_search', 'issues_faced_during_search', 'additional_suggestions'], name='Missing_per_feedbac_d4f7f8_idx'),
        ),
        migrations.AddIndex(
            model_name='volunteer',
            index=models.Index(fields=['is_deleted'], name='Missing_per_is_dele_0d374c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='match',
            unique_together={('missing_person', 'undefined_missing_person', 'unidentified_body', 'match_percentage', 'match_type')},
        ),
        migrations.AddIndex(
            model_name='division',
            index=models.Index(fields=['zone', 'name'], name='Missing_per_zone_id_3131cf_idx'),
        ),
    ]
